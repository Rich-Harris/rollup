// This file is generated by scripts/generate-ast-converters.js.
// Do not edit this file directly.

pub const TYPE_PARSE_ERROR: [u8; 4] = 0u32.to_ne_bytes();
pub const TYPE_ARRAY_EXPRESSION_INLINED_ELEMENTS: [u8; 4] = 1u32.to_ne_bytes();
pub const TYPE_ARRAY_PATTERN_INLINED_ELEMENTS: [u8; 4] = 2u32.to_ne_bytes();
pub const TYPE_ARROW_FUNCTION_EXPRESSION_INLINED_ANNOTATIONS: [u8; 4] = 3u32.to_ne_bytes();
pub const TYPE_ASSIGNMENT_EXPRESSION_INLINED_LEFT: [u8; 4] = 4u32.to_ne_bytes();
pub const TYPE_ASSIGNMENT_PATTERN_INLINED_LEFT: [u8; 4] = 5u32.to_ne_bytes();
pub const TYPE_BINARY_EXPRESSION_INLINED_LEFT: [u8; 4] = 6u32.to_ne_bytes();
pub const TYPE_BREAK_STATEMENT: [u8; 4] = 7u32.to_ne_bytes();
pub const TYPE_CALL_EXPRESSION_INLINED_ANNOTATIONS: [u8; 4] = 8u32.to_ne_bytes();
pub const TYPE_DIRECTIVE_INLINED_DIRECTIVE: [u8; 4] = 9u32.to_ne_bytes();
pub const TYPE_EXPRESSION_STATEMENT_INLINED_EXPRESSION: [u8; 4] = 10u32.to_ne_bytes();
pub const TYPE_IDENTIFIER_INLINED_NAME: [u8; 4] = 11u32.to_ne_bytes();
pub const TYPE_IF_STATEMENT_INLINED_TEST: [u8; 4] = 12u32.to_ne_bytes();
pub const TYPE_LITERAL_BOOLEAN: [u8; 4] = 13u32.to_ne_bytes();
pub const TYPE_LITERAL_NUMBER: [u8; 4] = 14u32.to_ne_bytes();
pub const TYPE_LITERAL_STRING_INLINED_VALUE: [u8; 4] = 15u32.to_ne_bytes();
pub const TYPE_LOGICAL_EXPRESSION_INLINED_LEFT: [u8; 4] = 16u32.to_ne_bytes();
pub const TYPE_MEMBER_EXPRESSION_INLINED_OBJECT: [u8; 4] = 17u32.to_ne_bytes();
pub const TYPE_PROGRAM_INLINED_BODY: [u8; 4] = 18u32.to_ne_bytes();
pub const TYPE_VARIABLE_DECLARATION_INLINED_DECLARATIONS: [u8; 4] = 19u32.to_ne_bytes();
pub const TYPE_VARIABLE_DECLARATOR_INLINED_ID: [u8; 4] = 20u32.to_ne_bytes();

pub const ARRAY_EXPRESSION_RESERVED_BYTES: usize = 4;

pub const ARRAY_PATTERN_RESERVED_BYTES: usize = 4;

pub const ARROW_FUNCTION_EXPRESSION_RESERVED_BYTES: usize = 16;
pub const ARROW_FUNCTION_EXPRESSION_FLAGS_OFFSET: usize = 4;
pub const ARROW_FUNCTION_EXPRESSION_ASYNC_FLAG: u32 = 1;
pub const ARROW_FUNCTION_EXPRESSION_EXPRESSION_FLAG: u32 = 2;
pub const ARROW_FUNCTION_EXPRESSION_GENERATOR_FLAG: u32 = 4;
pub const ARROW_FUNCTION_EXPRESSION_PARAMS_OFFSET: usize = 8;
pub const ARROW_FUNCTION_EXPRESSION_BODY_OFFSET: usize = 12;

pub const ASSIGNMENT_EXPRESSION_RESERVED_BYTES: usize = 12;
pub const ASSIGNMENT_EXPRESSION_OPERATOR_OFFSET: usize = 4;
pub const ASSIGNMENT_EXPRESSION_RIGHT_OFFSET: usize = 8;

pub const ASSIGNMENT_PATTERN_RESERVED_BYTES: usize = 8;
pub const ASSIGNMENT_PATTERN_RIGHT_OFFSET: usize = 4;

pub const BINARY_EXPRESSION_RESERVED_BYTES: usize = 12;
pub const BINARY_EXPRESSION_OPERATOR_OFFSET: usize = 4;
pub const BINARY_EXPRESSION_RIGHT_OFFSET: usize = 8;

pub const BREAK_STATEMENT_RESERVED_BYTES: usize = 8;
pub const BREAK_STATEMENT_LABEL_OFFSET: usize = 4;

pub const CALL_EXPRESSION_RESERVED_BYTES: usize = 16;
pub const CALL_EXPRESSION_FLAGS_OFFSET: usize = 4;
pub const CALL_EXPRESSION_OPTIONAL_FLAG: u32 = 1;
pub const CALL_EXPRESSION_CALLEE_OFFSET: usize = 8;
pub const CALL_EXPRESSION_ARGUMENTS_OFFSET: usize = 12;

pub const DIRECTIVE_RESERVED_BYTES: usize = 8;
pub const DIRECTIVE_EXPRESSION_OFFSET: usize = 4;

pub const EXPRESSION_STATEMENT_RESERVED_BYTES: usize = 4;

pub const IDENTIFIER_RESERVED_BYTES: usize = 4;

pub const IF_STATEMENT_RESERVED_BYTES: usize = 12;
pub const IF_STATEMENT_CONSEQUENT_OFFSET: usize = 4;
pub const IF_STATEMENT_ALTERNATE_OFFSET: usize = 8;

pub const LITERAL_BOOLEAN_RESERVED_BYTES: usize = 8;
pub const LITERAL_BOOLEAN_FLAGS_OFFSET: usize = 4;
pub const LITERAL_BOOLEAN_VALUE_FLAG: u32 = 1;

pub const LITERAL_NUMBER_RESERVED_BYTES: usize = 16;
pub const LITERAL_NUMBER_RAW_OFFSET: usize = 4;
pub const LITERAL_NUMBER_VALUE_OFFSET: usize = 8;

pub const LITERAL_STRING_RESERVED_BYTES: usize = 8;
pub const LITERAL_STRING_RAW_OFFSET: usize = 4;

pub const LOGICAL_EXPRESSION_RESERVED_BYTES: usize = 12;
pub const LOGICAL_EXPRESSION_OPERATOR_OFFSET: usize = 4;
pub const LOGICAL_EXPRESSION_RIGHT_OFFSET: usize = 8;

pub const MEMBER_EXPRESSION_RESERVED_BYTES: usize = 12;
pub const MEMBER_EXPRESSION_FLAGS_OFFSET: usize = 4;
pub const MEMBER_EXPRESSION_COMPUTED_FLAG: u32 = 1;
pub const MEMBER_EXPRESSION_OPTIONAL_FLAG: u32 = 2;
pub const MEMBER_EXPRESSION_PROPERTY_OFFSET: usize = 8;

pub const PROGRAM_RESERVED_BYTES: usize = 8;
pub const PROGRAM_ANNOTATIONS_OFFSET: usize = 4;

pub const VARIABLE_DECLARATION_RESERVED_BYTES: usize = 8;
pub const VARIABLE_DECLARATION_KIND_OFFSET: usize = 4;

pub const VARIABLE_DECLARATOR_RESERVED_BYTES: usize = 8;
pub const VARIABLE_DECLARATOR_INIT_OFFSET: usize = 4;
